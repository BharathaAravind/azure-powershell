
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for PrometheusRule.
.Description
Create an in-memory object for PrometheusRule.
.Example
 new-AzPrometheusRuleObject -Alert "Billing_Processing_Very_Slow" -Expression "job_type:billing_jobs_duration_seconds:99p5m > 30" -Severity 2 -For PT5M

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Alerts.Models.Api20230301.PrometheusRule
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ACTIONPROPERTY <IStringDictionary>: The properties of an action group object.
  [(Any) <String>]: This indicates any property can be added to this object.

ANNOTATION <IStringDictionary>: Alert annotation key-value pairs.
  [(Any) <String>]: This indicates any property can be added to this object.

LABEL <IStringDictionary>: Labels to add or overwrite before storing the result.
  [(Any) <String>]: This indicates any property can be added to this object.
.Link
https://learn.microsoft.com/powershell/module/az./new-AzPrometheusRuleObject
#>
function New-AzPrometheusRuleObject {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.Alerts.Models.Api20230301.PrometheusRule])]
[CmdletBinding(PositionalBinding=$false)]
param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.String]
    # The PromQL expression to evaluate.
    # Every evaluation cycle this is evaluated at the current time, and the result recorded as a new set of time series with the metric name as given by 'record'.
    ${Expression},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.String[]]
    # One or more action group resource IDs.
    # Each is activated when an alert is fired.
    ${ActionGroup},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Models.Api20230301.IStringDictionary]
    # The properties of an action group object.
    # To construct, see NOTES section for ACTIONPROPERTY properties and create a hash table.
    ${ActionProperty},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.String]
    # Alert rule name.
    ${Alert},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Models.Api20230301.IStringDictionary]
    # Alert annotation key-value pairs.
    # To construct, see NOTES section for ANNOTATION properties and create a hash table.
    ${Annotation},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.Boolean]
    # Enable/disable rule.
    ${Enabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.TimeSpan]
    # The amount of time alert must be active before firing.
    ${For},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Models.Api20230301.IStringDictionary]
    # Labels to add or overwrite before storing the result.
    # To construct, see NOTES section for LABEL properties and create a hash table.
    ${Label},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.String]
    # Recorded metrics name.
    ${Record},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.Boolean]
    # Enable alert auto-resolution.
    ${ResolveConfigurationAutoResolved},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.TimeSpan]
    # Alert auto-resolution timeout.
    ${ResolveConfigurationTimeToResolve},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Category('Body')]
    [System.Int32]
    # The severity of the alerts fired by the rule.
    ${Severity}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.Alerts.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            __AllParameterSets = 'Az.AlertsManagement.custom\New-AzPrometheusRuleObject';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.Alerts.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.Alerts.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
